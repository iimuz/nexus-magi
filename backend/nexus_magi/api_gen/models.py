# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-04-30T06:44:30+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel


class Role(Enum):
    """
    メッセージの役割（ユーザーまたはアシスタント）
    """

    user = 'user'
    assistant = 'assistant'


class ChatMessage(BaseModel):
    role: Role
    """
    メッセージの役割（ユーザーまたはアシスタント）
    """
    content: str
    """
    メッセージの内容
    """


class ChatRequest(BaseModel):
    messages: List[ChatMessage]
    """
    メッセージの履歴
    """
    stream: Optional[bool] = False
    """
    ストリーミングモードを使用するかどうか
    """
    debate: Optional[bool] = False
    """
    討論モードを使用するかどうか
    """
    debate_rounds: Optional[int] = 1
    """
    討論ラウンド数
    """


class System(Enum):
    """
    レスポンスを生成するシステム（MAGI）
    """

    melchior = 'melchior'
    balthasar = 'balthasar'
    casper = 'casper'
    consensus = 'consensus'


class WebSocketResponse(BaseModel):
    system: System
    """
    レスポンスを生成するシステム（MAGI）
    """
    response: str
    """
    レスポンスの内容
    """
    phase: Optional[str] = None
    """
    現在のフェーズ
    """
